{"level":"error","message":"error error","stack":"Error: error\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:10:9\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9","timestamp":"2023-03-29T11:50:48.206Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-29T11:52:27.339Z"}
{"level":"error","message":"error error","stack":"Error: error\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:10:9\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9","timestamp":"2023-03-29T11:52:53.851Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-29T11:53:32.506Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:52:17","stringValue":"\"1\"","timestamp":"2023-03-29T11:55:03.737Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-29T12:16:28.775Z"}
{"level":"error","message":"Unhandled Promise Rejection: something failed!!!!!","timestamp":"2023-03-29T12:16:28.777Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-29T12:16:46.016Z"}
{"level":"error","message":"Unhandled Promise Rejection: something failed!!!!!","timestamp":"2023-03-29T12:16:46.018Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-29T12:17:59.138Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:52:17","stringValue":"\"1\"","timestamp":"2023-03-29T12:18:23.086Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:11:07.763Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:34:33.739Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:43:18.724Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:44:02.557Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:44:45.942Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:45:24.650Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:46:43.117Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:47:11.929Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T12:48:41.412Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:22:13.186Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:22:43.477Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:23:05.035Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:23:43.963Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:23:54.003Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:24:03.441Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:24:11.742Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:26:07.499Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:26:21.438Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:26:25.052Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:26:43.870Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:30:38.805Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:31:58.423Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:32:08.385Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:49:53.485Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:50:06.006Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:50:44.210Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:50:49.101Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:53:11.424Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:53:26.855Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:53:43.114Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:53:58.931Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T13:59:26.974Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:02:58.306Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:03:17.486Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:08:23.091Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:52:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:08:23.231Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:08:34.251Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:52:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:08:34.390Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:08:59.950Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:55:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:09:00.136Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:09:20.847Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:09:37.377Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:09:42.592Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:09:52.052Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:11:58.950Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:12:25.219Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:12:36.488Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:13:01.216Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:13:04.893Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:53:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:13:05.032Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:13:11.624Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:53:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:13:11.764Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:13:30.536Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:53:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:13:30.673Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:13:37.770Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:53:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:13:37.906Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:14:25.548Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOne (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2465:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:54:17","stringValue":"\"1\"","timestamp":"2023-03-31T14:14:25.689Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:14:38.775Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'params') Cannot read properties of undefined (reading 'params')","stack":"TypeError: Cannot read properties of undefined (reading 'params')\n    at params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\middleware\\validateObjectId.js:4:44)\n    at validateObjectId (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:54:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:284:15\n    at param (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:376:14)\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:421:3)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at jsonParser (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at expressInit (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at query (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\application.js:181:10)\n    at Server.app (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (node:events:513:28)\n    at parserOnIncoming (node:_http_server:1068:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)","timestamp":"2023-03-31T14:14:38.931Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'params') Cannot read properties of undefined (reading 'params')","stack":"TypeError: Cannot read properties of undefined (reading 'params')\n    at params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\middleware\\validateObjectId.js:4:44)\n    at validateObjectId (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:54:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:284:15\n    at param (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:376:14)\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:421:3)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at jsonParser (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at expressInit (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at query (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\application.js:181:10)\n    at Server.app (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (node:events:513:28)\n    at parserOnIncoming (node:_http_server:1068:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)","timestamp":"2023-03-31T14:14:38.945Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T14:15:20.018Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:45:22.511Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:45:45.647Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:46:06.269Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:50:21.520Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:50:21.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:51:10.010Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:51:10.124Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:51:26.160Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:51:26.255Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:53:27.836Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:53:27.938Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:54:49.764Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:54:49.861Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:55:03.436Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:55:03.533Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:55:52.669Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:55:52.770Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:56:30.097Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:56:30.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:56:58.495Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T17:56:58.595Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:01:35.549Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:01:35.663Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:01:59.296Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:01:59.403Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:02:37.654Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:02:37.766Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:02:58.699Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:02:58.819Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:04.747Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:04.840Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:16.521Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:16.649Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:20.635Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:20.730Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:52.552Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:52.648Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:58.301Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:03:58.404Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:10:28.356Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:10:28.505Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:10:40.092Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:10:40.215Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:11:19.809Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:11:19.904Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:11:38.865Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:11:38.973Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:12:01.453Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:12:01.553Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:14:43.640Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:14:43.748Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:14:54.103Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:14:54.251Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:15:46.082Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:15:46.182Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:05.047Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:05.147Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:15.867Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:15.965Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:25.112Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:25.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:30.870Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:30.967Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:36.449Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:18:36.549Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:27:48.744Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:27:48.872Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:28:06.280Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:28:06.409Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:28:36.028Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:28:36.138Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:24.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:24.676Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:37.199Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:37.316Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:41.318Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:41.447Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:46.305Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:29:46.412Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:30:22.137Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:30:22.251Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:30:27.796Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:30:27.934Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:30:32.930Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:30:33.039Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:31:01.306Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:31:01.405Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:31:30.634Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:31:30.737Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:31:34.904Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:31:35.026Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:32:08.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:32:08.873Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:32:36.296Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:32:36.392Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:33:19.360Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:33:19.486Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:34:16.717Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:34:16.813Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:35:10.207Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:35:10.307Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:35:56.360Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:35:56.467Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:37:53.894Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:37:58.271Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:40:45.463Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:40:45.562Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:55:26.351Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:55:46.955Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:55:47.057Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:56:22.194Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T18:56:22.313Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:00:48.691Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:00:48.807Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:00:57.994Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:00:58.114Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:09.112Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:09.267Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:25.337Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:25.441Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:36.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:36.685Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:51.882Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:01:51.975Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:02:13.111Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:02:13.255Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:02:37.265Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:02:37.384Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:02:53.516Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:02:53.666Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:03:06.006Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:03:06.138Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:03:17.509Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:03:17.586Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:03:17.628Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:03:17.666Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:07.017Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:07.053Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:07.093Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:07.156Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:29.077Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:29.130Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:29.147Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:04:29.204Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:07:25.654Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:07:25.703Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:07:25.740Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:07:25.791Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:08:02.068Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:08:02.177Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:08:37.857Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:08:37.958Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:01.065Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:01.115Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:01.190Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:01.198Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:37.095Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:37.177Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:37.214Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:37.241Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:45.467Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:45.482Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:45.503Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:09:45.619Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:10:01.693Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:10:01.716Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:10:01.846Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:10:01.855Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:44.325Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:44.392Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:44.451Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:44.458Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:54.370Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:54.530Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:54.553Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:11:54.544Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:12:40.917Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:12:40.918Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:12:41.112Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:12:41.144Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:12.948Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:12.945Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:13.106Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:13.157Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:52.931Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:53.087Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:53.111Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:13:53.128Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:14:07.276Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:14:07.308Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:14:07.409Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:14:07.409Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:16:44.871Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:16:44.978Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:16:44.996Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:16:45.013Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:18:37.340Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:18:37.439Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:18:37.446Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:18:37.540Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:07.197Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:07.224Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:07.319Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:07.354Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:38.458Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:38.459Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:38.593Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:19:38.664Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:01.031Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:01.152Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:01.168Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:01.214Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:54.573Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:54.712Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:54.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:21:54.810Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:22:03.977Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:22:04.074Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:22:04.151Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:22:04.168Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:30.097Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:30.110Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:30.147Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:30.251Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:47.445Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:47.464Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:47.528Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:28:47.631Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:07.169Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:07.191Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:07.226Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:07.360Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:15.335Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:15.354Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:15.349Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:15.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:23.240Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:23.284Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:23.336Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:23.392Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:40.783Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:40.830Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:40.906Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:29:40.913Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:30:05.913Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:30:05.974Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:30:06.068Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:30:06.090Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:19.755Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:19.796Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:19.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:19.914Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:40.364Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:40.425Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:40.394Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:32:40.574Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:14.845Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:14.855Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:14.863Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:14.992Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:41.183Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:41.255Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:41.358Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:33:41.384Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:02.286Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:02.298Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:02.461Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:02.593Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:11.472Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:11.505Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:11.629Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:11.724Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:22.062Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:22.121Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:22.198Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:22.278Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:39.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:39.621Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:39.706Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:39.762Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:47.418Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:47.442Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:47.477Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:34:47.599Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:35:45.784Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:35:45.805Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:35:45.832Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:35:45.986Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:02.081Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:02.115Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:02.106Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:02.240Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:11.759Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:11.804Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:11.897Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:11.933Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:50.305Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:50.341Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:50.417Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:36:50.428Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:23.405Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:23.430Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:23.476Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:23.587Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:45.091Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:45.100Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:45.142Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:45.237Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:57.504Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:57.551Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:57.567Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:38:57.722Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:39:18.730Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:39:18.758Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:39:18.815Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:39:18.891Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:40:16.918Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:40:16.982Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:40:17.062Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:40:17.105Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:40:42.066Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T19:40:42.151Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:10.495Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:10.516Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:14.095Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:14.220Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:22.895Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:22.907Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:23.852Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:23.860Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:29.347Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:29.364Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:29.664Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:30:29.680Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:41:58.794Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:41:58.803Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:41:58.934Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:41:58.981Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:41:59.119Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:41:59.150Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:42:14.908Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:42:15.090Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:42:15.174Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:42:15.345Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:42:15.369Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:42:15.428Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:42:15.518Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:42:15.577Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:43:23.896Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:43:23.958Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:43:24.065Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:43:24.214Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:43:24.332Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:43:24.372Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:43:24.394Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:43:24.429Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:09.748Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:09.752Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:09.920Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:09.931Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:10.088Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:10.145Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:10.189Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:10.248Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:29.252Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:29.270Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:29.381Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:46:29.554Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:29.709Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:29.732Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:29.774Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:46:29.791Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:47:21.030Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:47:21.052Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:47:21.183Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:47:21.382Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:47:21.458Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:47:21.522Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:47:21.540Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndDelete (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3406:8)\n    at model.Query._findOneAndRemove (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3640:15)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:47:17","stringValue":"\"1\"","timestamp":"2023-03-31T20:47:21.604Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:16.719Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:16.844Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:16.833Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:16.902Z"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:48:17.017Z","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schema\\objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1202:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\schematype.js:1613:15)\n    at cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\cast.js:348:32)\n    at model.Query.Object.<anonymous>.Query.cast (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4791:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:2177:10)\n    at model.Query._findOneAndUpdate (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:3209:8)\n    at model.Query.exec (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\mongoose\\lib\\query.js:4321:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\genres.js:28:15","stringValue":"\"1\"","timestamp":"2023-03-31T20:48:17.066Z","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:29.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:29.254Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:29.304Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:48:29.409Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:49:26.758Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:49:26.777Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:49:26.904Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:49:26.941Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:51:58.163Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:51:58.171Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:51:58.311Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:51:58.330Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:53:32.886Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:53:32.886Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:53:33.009Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:53:33.016Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:56:40.219Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:56:40.220Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:56:40.368Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:56:40.525Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:57:45.482Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:57:45.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:57:45.637Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T20:57:45.749Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:02:02.731Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:02:02.772Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:02:02.920Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:02:03.055Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:06:05.764Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:06:05.899Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:06:05.935Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:06:06.047Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:33.230Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:33.249Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:33.385Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:33.519Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:40.104Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:40.113Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:40.180Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:40.240Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:55.050Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:55.059Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:55.082Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:08:55.190Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:09:27.118Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:09:27.171Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:09:27.252Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:09:27.258Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:23.159Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:23.190Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:23.253Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:23.285Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:52.067Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:52.067Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:52.151Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:10:52.364Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:11:34.292Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:11:34.329Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:11:34.434Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:11:34.438Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:13:44.819Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:13:44.945Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:13:45.004Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:13:45.162Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:10.260Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:10.421Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:10.537Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:10.617Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:54.689Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:54.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:54.814Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:14:54.826Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:17:49.613Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:17:49.703Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:17:49.741Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:17:49.801Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:02.322Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:02.373Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:02.516Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:02.583Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:23.187Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:23.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:23.335Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:19:23.419Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:21:09.295Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:21:09.322Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:21:09.396Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:21:09.447Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:25:35.060Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:25:35.109Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:25:35.177Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:25:35.188Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:08.804Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:08.853Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:08.895Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:09.012Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:25.924Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:25.996Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:26.057Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:26:26.137Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:27:29.620Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:27:29.650Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:27:29.800Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-03-31T21:27:29.985Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:22:19.727Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:22:19.718Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:22:24.254Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:22:24.279Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:23:18.432Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:23:18.447Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:23:18.571Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:35:17.903Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:35:18.022Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:35:31.498Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:35:31.507Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:37:42.755Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:37:42.802Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:38:40.515Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:38:40.560Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:38:54.189Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:38:54.218Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:39:13.799Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:39:13.891Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:40:22.630Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:40:22.730Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:40:27.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:40:27.514Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:41:19.082Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:41:19.107Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:41:19.186Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:41:24.478Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:41:24.489Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:41:24.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:42:50.019Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:42:50.033Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:43:00.379Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:43:00.483Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:43:08.980Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:43:09.097Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:43:56.753Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:43:56.858Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:44:30.898Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:44:30.920Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:44:43.024Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:44:43.136Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:46:23.403Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:46:23.424Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:46:23.510Z"}
{"level":"error","message":"res.status.send is not a function res.status.send is not a function","stack":"TypeError: res.status.send is not a function\n    at send (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\routes\\returns.js:12:14)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\body-parser\\lib\\read.js:137:5\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at invokeCallback (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\raw-body\\index.js:231:16)\n    at done (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\raw-body\\index.js:220:7)\n    at IncomingMessage.onEnd (D:\\Ethereum\\nodejs\\5-genres-practice-mongo-rest\\node_modules\\raw-body\\index.js:280:7)\n    at IncomingMessage.emit (node:events:513:28)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2023-04-01T11:46:23.536Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:46:46.010Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:46:46.116Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:07.084Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:07.091Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:07.306Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:34.369Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:34.468Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:43.335Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:43.462Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:49:43.505Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:54:16.062Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:54:16.210Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:54:48.850Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:54:48.879Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:55:09.474Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:55:09.592Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:55:19.822Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:55:19.829Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T11:55:19.927Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:51:53.979Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:51:53.989Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:54:48.757Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:54:48.774Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:54:49.188Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:54:53.111Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:54:53.228Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:56:24.588Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:56:24.703Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:56:25.017Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:57:20.709Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:57:20.808Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:57:20.874Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:58:23.546Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:58:23.554Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:58:32.061Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:58:32.184Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:58:32.252Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:59:47.056Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:59:47.066Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:59:47.212Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:59:52.500Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:59:52.493Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T12:59:52.653Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T13:02:40.110Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T13:02:40.227Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-01T13:02:40.297Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2023-04-02T10:49:10.665Z"}
